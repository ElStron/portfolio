---
import { iconsTags } from '../data/icons';
import Icon from './Icon.astro';
interface Props {
	title: string;
	body: string;
	href: string;
	image?: string;
	tecnologies?: string[];
}

const { href, title, body, image, tecnologies } = Astro.props;
---

<div class="link-card">
	<ul class="tecnologies">
		{
			tecnologies?.map((tecnology) => {
				const icon = iconsTags[tecnology.toLowerCase() as keyof typeof iconsTags];
				return (
					<Icon icon={icon} name={tecnology} />
				)
			})
		}
	</ul>
	<a href={href} target="_blank">
		<img src={image} alt={title} loading="lazy" />
		<div class="content">
			<h2>{title}</h2>
			<p>{body}</p>
		</div>
	</a>
	
</div>
<style>
	.link-card {
		list-style: none;
		display: flex;
		gap: 1rem;
		& > a {
			width: 100%;
			display: flex;
			flex-direction: column;
			border-radius: 15px;
			padding: 10px;
			background:var(--gradient-style-2);
			transition: background-color 0.5s ease;
		}
		& > a > .content {
			display: flex;
			flex-direction: column;
			gap: 0.5rem;
			padding: 1rem;
		}

		&:is(:hover, :focus-within) a {
			background: var(--background-transparent);
			border-radius: 15px;	
		}

	}

	.tecnologies {
		display: flex;
		flex-direction: column;
		justify-content: space-evenly;
		gap: 0.5rem;
		position: relative;
		&::after {
			content: "";
			position: absolute;
			top: 0;
			left: 75%;
			transform: translateX(-50%);
			width: 24px;
			height: 97%;
			background-color: #ffffff15;
			opacity: 0.8;
			z-index: 0;
			filter: blur(29px);
		}
	}

	h2 {
		margin: 0;
		font-size: 1.25rem; 
		transition: color 0.7s cubic-bezier(0.22, 1, 0.36, 1);
	}
	p {
		margin-top: 0.5rem;
		margin-bottom: 0;
		color: #a3a3a3;
	}

	.link-card:is(:hover, :focus-within) h2 {
		color: #ffffff;
	}

	.link-card:is(:hover, :focus-within) p {
		color: #ffffff;
	}

	img {
		aspect-ratio: 16 / 9;
		border-radius: 17px;
		box-shadow: 0 4px 6px -1px rgb(0 0 0 / 0.1), 0 2px 4px -2px rgb(0 0 0 / 0.1);
	}
</style>